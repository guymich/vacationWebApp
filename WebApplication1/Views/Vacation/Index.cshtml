@model IEnumerable<WebApplication1.ViewModels.VacationViewModel>
@inject UserManager<User> UserManager

@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json


@{
    var user = await UserManager.GetUserAsync(User);
    var Role = user.Role;
    var vacationCount = ViewBag.vacationCount;
    var followedVacationsJson = ViewBag.followedVacations as string;
    List<int> followedVacations = new List<int>(); // Initialize as empty

    // Deserialize the JSON string only if it's not null or empty
    if (!string.IsNullOrEmpty(followedVacationsJson))
    {
        followedVacations = JsonConvert.DeserializeObject<List<int>>(followedVacationsJson);
    }

    var vacationsWithFollowerCountsJson = ViewBag.vacationsWithFollowerCounts as string;
    List<int> vacationsWithFollowerCounts = new List<int>(); // Initialize as empty

    // Deserialize the JSON string only if it's not null or empty
    if (!string.IsNullOrEmpty(vacationsWithFollowerCountsJson))
    {
        followedVacations = JsonConvert.DeserializeObject<List<int>>(vacationsWithFollowerCountsJson);
    }
}

@if (User.Identity != null && User.Identity.IsAuthenticated)
{
    @if (Role == 1)
    {
    <a asp-action="Create" class="btn btn-primary">Add New Vacation</a>
    <a href="Vacation/ExportVacations" class="btn btn-primary">
        Download CSV
    </a>

    }else
    {
        <form asp-action="Filter" method="post" id="filter_vacation" class="filter_vacation">
            <div>
                <label for="Followed">Followed</label>
                <input type="checkbox" name="Followed" id="Followed" value="true" class="vacation_filter_button" 
                @(ViewBag.Followed ? "checked" : "") />
            </div>
            <div>
                <label for="CurrentDate">Current Date</label>
                <input type="checkbox" name="CurrentDate" id="CurrentDate" value="true" class="vacation_filter_button"
                @(ViewBag.CurrentDate ? "checked" : "") />
            </div>
            <div>
                <label for="Active">Active</label>
                <input type="checkbox" name="Active" id="Active" value="true" class="vacation_filter_button"
                 @(ViewBag.Active ? "checked" : "") /> 
            </div>
            <button type="submit" class="btn btn-primary">Filter</button>
        </form>
    }


    @if (Model == null || !Model.Any())
    {
        <p>No vacations found.</p>
    }
    else
    {
        <div class="vacation_card_wrapper"> 
            @foreach (var vacationItem in Model)
            {
                
                var vacation = vacationItem.Vacation;
                var followerCount = vacationItem.FollowerCount;

                <div class="card vacation_card"> 

                    <div class ="vacation_card_actions" style="background-position: center; background-size: cover; background-repeat: no-repeat; height: 10rem; 
                            @if (!string.IsNullOrEmpty(vacation.ImagePath)) 
                            {
                                @:background-image: url('@vacation.ImagePath'); 
                            }"
                        >
                        @if (Role == 1)
                        {
                           <a asp-action="Edit" asp-route-id="@vacation.Id" class="btn btn-warning">Edit</a>

                            <form asp-action="Delete" method="post" id="delete_vacation">
                                <input type="hidden" name="id" value="@vacation.Id" />
                                <button type="submit" class="btn btn-danger">Delete</button>
                            </form>

                        }else{
                             <div>
                                <button 
                                    onclick="followVacation(@vacation.Id, this)" 
                                    class="btn follow_btn @(vacationItem.IsFollowed ? "active" : "")">
                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="20" height="20" class="heart-svg">
                                    <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" />
                                    </svg>
                                    <span>Follow</span>
                                    <span class="follow_btn_count">@followerCount</span>
                                </button>
                            </div>
                        }

                    </div>

                    <div class="vacation_card_date">
                        <p>@vacation.StartDate?.ToString("MM/dd/yyyy")</p>
                        <p>@vacation.EndDate?.ToString("MM/dd/yyyy")</p>
                    </div>

                    <div class="vacation_card_content">
                        <h3>@vacation.Destination</h3>
                        <p>@vacation.Description</p>
                    </div>
                    
                    <p class="vacation_card_price">@String.Format("{0:0.00}", @vacation.Price)$</p>
                         
                </div>
            }
        </div>
    }
}
<div class="pagination">
    <ul>
        @{
        bool followed = ViewBag.Followed != null && ViewBag.Followed;
        bool currentDate = ViewBag.CurrentDate != null && ViewBag.CurrentDate;
        bool active = ViewBag.Active != null && ViewBag.Active;
        }
        @for (int a = 0; vacationCount > a; a++)
        {
            <li>
                <a class="@(ViewBag.PageNumber == a ? "active-page" : "")"
                href="@Url.Action("Index", new { p = a, Followed = followed ? (bool?)ViewBag.Followed : null,  CurrentDate = currentDate ? (bool?)ViewBag.CurrentDate : null,  Active = active ? (bool?)ViewBag.Active : null,})">
                    @a
                </a>
            </li>
        }
    </ul>
</div>
@if (ViewBag.Message != null)
{
    <div class="alert alert-success">
        @ViewBag.Message
    </div>
}

<script>
   document.querySelector('#delete_vacation').addEventListener('submit', (e) => {
        if (!confirm("Are you sure you want to delete this vacation?")) {
            e.preventDefault();
        }
    });

</script>